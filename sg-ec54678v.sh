# Commands auto-generated by the copysg.py script
 
sgout=(`aws ec2 create-security-group --vpc-id=vpc-f456gh90 --group-name='new_migrated' --region sa-east-1 --description='new' --output table`)
if [ $? != 0 ]; then
   echo "Error: aws ec2 create-security-group failed"
   exit 1
fi
if [ "${sgout[6]}" != 'GroupId' ]; then
   echo "Error: expected 'GroupId', got ${sgout[6]}"
   exit 1
fi
SGID=${sgout[8]}
aws ec2 authorize-security-group-ingress --region sa-east-1 --group-id=$SGID --protocol='tcp' --port=80 --cidr=0.0.0.0/0
if [ $? != 0 ]; then
   echo "Error: aws ec2 authorize-security-group-ingress failed"
   exit 1
fi
aws ec2 authorize-security-group-ingress --region sa-east-1 --group-id=$SGID --protocol='tcp' --port=5432 --cidr=1.1.1.1/32
if [ $? != 0 ]; then
   echo "Error: aws ec2 authorize-security-group-ingress failed"
   exit 1
fi
aws ec2 authorize-security-group-ingress --region sa-east-1 --group-id=$SGID --protocol='tcp' --port=22 --cidr=1.1.1.1/32
if [ $? != 0 ]; then
   echo "Error: aws ec2 authorize-security-group-ingress failed"
   exit 1
fi
aws ec2 authorize-security-group-ingress --region sa-east-1 --group-id=$SGID --protocol='tcp' --port=22 --cidr=127.0.0.1/32
if [ $? != 0 ]; then
   echo "Error: aws ec2 authorize-security-group-ingress failed"
   exit 1
fi
aws ec2 authorize-security-group-ingress --region sa-east-1 --group-id=$SGID --protocol='tcp' --port=8443 --cidr=0.0.0.0/0
if [ $? != 0 ]; then
   echo "Error: aws ec2 authorize-security-group-ingress failed"
   exit 1
fi
aws ec2 authorize-security-group-ingress --region sa-east-1 --group-id=$SGID --protocol='udp' --port=514 --cidr=1.1.1.1/32
if [ $? != 0 ]; then
   echo "Error: aws ec2 authorize-security-group-ingress failed"
   exit 1
fi
